{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction \u2301 xDrip4iOS (also known as \"xDrip for iOS\" or \"xdripswift\" ) is an open-source application to display real time blood glucose data. It is able to connect as a Master device to various types of Continuous Glucose Monitor systems and display their values on the screen. This is the main way that most people (usually patients with Type 1 Diabetes) will use the app. It is also able to act as a Follower device and pull remote CGM data from Nightscout . This is a great way for parents and care-givers to be able to remotely monitor loved ones and patients. FOR XDRIP+ USERS Please note that xDrip4iOS is not related to the xDrip+ project for Android . For help and information about the xDrip+ project for Android, please see here or look on Facebook . What Do I Need? \u2301 To run xDrip4iOS you will firstly need an iPhone 7 or newer running minimum iOS13. To work as a Master device, you will need to have a compatible CGM system (see below). If you want to share your CGM data with Nightscout, then you will also need a working internet connection. To work as a Follower device, you don't need anything except an internet connection and a working Nightscout site from where to follow the master device. That's it. Nothing else is needed. IMPORTANT Before using xDrip4iOS , it is important to understand several points: This is an open-source, community-based project and is not supported by any company It is not officially approved or regulated for diabetes therapy and/or treatment in any way whatsoever You must understand that you take full responsibility for using this software and you agree to do so at your own risk. Compatible Sensors \u2301 xDrip4iOS is compatible with many Libre sensors and also certain Dexcom sensors/transmitters. Libre \u2301 Libre 1 (European 14 day) Transmitter Type Firmware Version Compatible? MiaoMiao 1 All Yes MiaoMiao 2 All Yes Bubble All Yes Atom All Yes GNSentry All Yes Libre 2 (European 14 day) Transmitter Type Firmware Version Compatible? Direct Bluetooth (no transmitter) - Yes MiaoMiao 1 >= 39 Yes (1) MiaoMiao 2 >= 7 Yes (1) Bubble All Yes Atom All Yes GNSentry - No (1) The MiaoMiao firmware can be upgraded, if needed, using Tomato App Libre 1/2 US, Libre Pro Not compatible Dexcom \u2301 Dexcom G4/G5 Fully compatible Dexcom G6 Transmitter Serial Number Firmware/ Version Compatible? 80xxxx All Yes 81 x xxx (3rd digit is usually a number ) <= x.x.x.25 Yes 81 x xxx (3rd digit is usually a letter ) >= x.x.x.27 No 8Gxxxx, 8Hxxxx, 8Jxxxx ... etc (\"Firefly\") - No Where Can I Get Help? \u2301 The main public support group for all support is the xDrip4iOS group on Facebook . Feel free to join the group, ask questions and participate. You can also find all source code, technical information and register issues in our Github repository . Development History \u2301 This project was started back in 2017 by Johan Degraeve . His idea was to port the original xDrip algorithm to iOS. The original project he created was called xdripiosreader . This was later re-written in 2019 into native swift code and renamed to xdripswift . In 2020, the user interface was overhauled, more features were added and the user-facing project was renamed to xDrip4iOS . How Can I Get Involved? \u2301 You'll find the Github source repository for this documentation here . Please don't hesitate to improve or correct anything you see and create a pull request! You're also welcome to contribute or report any documentationerror, unclear explanation, typo, broken link etc by going to Github and opening an issue .","title":"Introduction"},{"location":"#introduction","text":"xDrip4iOS (also known as \"xDrip for iOS\" or \"xdripswift\" ) is an open-source application to display real time blood glucose data. It is able to connect as a Master device to various types of Continuous Glucose Monitor systems and display their values on the screen. This is the main way that most people (usually patients with Type 1 Diabetes) will use the app. It is also able to act as a Follower device and pull remote CGM data from Nightscout . This is a great way for parents and care-givers to be able to remotely monitor loved ones and patients. FOR XDRIP+ USERS Please note that xDrip4iOS is not related to the xDrip+ project for Android . For help and information about the xDrip+ project for Android, please see here or look on Facebook .","title":"Introduction"},{"location":"#what-do-i-need","text":"To run xDrip4iOS you will firstly need an iPhone 7 or newer running minimum iOS13. To work as a Master device, you will need to have a compatible CGM system (see below). If you want to share your CGM data with Nightscout, then you will also need a working internet connection. To work as a Follower device, you don't need anything except an internet connection and a working Nightscout site from where to follow the master device. That's it. Nothing else is needed. IMPORTANT Before using xDrip4iOS , it is important to understand several points: This is an open-source, community-based project and is not supported by any company It is not officially approved or regulated for diabetes therapy and/or treatment in any way whatsoever You must understand that you take full responsibility for using this software and you agree to do so at your own risk.","title":"What Do I Need?"},{"location":"#compatible-sensors","text":"xDrip4iOS is compatible with many Libre sensors and also certain Dexcom sensors/transmitters.","title":"Compatible Sensors"},{"location":"#libre","text":"Libre 1 (European 14 day) Transmitter Type Firmware Version Compatible? MiaoMiao 1 All Yes MiaoMiao 2 All Yes Bubble All Yes Atom All Yes GNSentry All Yes Libre 2 (European 14 day) Transmitter Type Firmware Version Compatible? Direct Bluetooth (no transmitter) - Yes MiaoMiao 1 >= 39 Yes (1) MiaoMiao 2 >= 7 Yes (1) Bubble All Yes Atom All Yes GNSentry - No (1) The MiaoMiao firmware can be upgraded, if needed, using Tomato App Libre 1/2 US, Libre Pro Not compatible","title":"Libre"},{"location":"#dexcom","text":"Dexcom G4/G5 Fully compatible Dexcom G6 Transmitter Serial Number Firmware/ Version Compatible? 80xxxx All Yes 81 x xxx (3rd digit is usually a number ) <= x.x.x.25 Yes 81 x xxx (3rd digit is usually a letter ) >= x.x.x.27 No 8Gxxxx, 8Hxxxx, 8Jxxxx ... etc (\"Firefly\") - No","title":"Dexcom"},{"location":"#where-can-i-get-help","text":"The main public support group for all support is the xDrip4iOS group on Facebook . Feel free to join the group, ask questions and participate. You can also find all source code, technical information and register issues in our Github repository .","title":"Where Can I Get Help?"},{"location":"#development-history","text":"This project was started back in 2017 by Johan Degraeve . His idea was to port the original xDrip algorithm to iOS. The original project he created was called xdripiosreader . This was later re-written in 2019 into native swift code and renamed to xdripswift . In 2020, the user interface was overhauled, more features were added and the user-facing project was renamed to xDrip4iOS .","title":"Development History"},{"location":"#how-can-i-get-involved","text":"You'll find the Github source repository for this documentation here . Please don't hesitate to improve or correct anything you see and create a pull request! You're also welcome to contribute or report any documentationerror, unclear explanation, typo, broken link etc by going to Github and opening an issue .","title":"How Can I Get Involved?"},{"location":"faq/","text":"Frequently Asked Questions \u2301 The idea of these FAQs is to try and cover the most common questions that people have when writing in the Facebook group or e-mail us for support. All of the below answers can be found in more detail in the rest of these support pages. We'll try and link to the specific sections where possible. Can I connect using only my Apple Watch? \u2301 No Testflight says that my app will expire in 83 days, what should I do? \u2301 Nothing. We'll always update the Testflight version before it runs out, don't worry. How can I get reports for my Doctor? \u2301 Use Nightscout","title":"FAQ"},{"location":"faq/#frequently-asked-questions","text":"The idea of these FAQs is to try and cover the most common questions that people have when writing in the Facebook group or e-mail us for support. All of the below answers can be found in more detail in the rest of these support pages. We'll try and link to the specific sections where possible.","title":"Frequently Asked Questions"},{"location":"faq/#can-i-connect-using-only-my-apple-watch","text":"No","title":"Can I connect using only my Apple Watch?"},{"location":"faq/#testflight-says-that-my-app-will-expire-in-83-days-what-should-i-do","text":"Nothing. We'll always update the Testflight version before it runs out, don't worry.","title":"Testflight says that my app will expire in 83 days, what should I do?"},{"location":"faq/#how-can-i-get-reports-for-my-doctor","text":"Use Nightscout","title":"How can I get reports for my Doctor?"},{"location":"configure/","text":"General Settings \u2301 In a previous section , you should have initially configured xDrip4iOS to use mg/dl or mmol/l and to act as a Master or Follower device. Now we can start to configure the app to work as we want. When you first install xDrip4iOS, we will put some default values that should work fine for most users to start using the app with. Show Notifications \u2301 You can enable xDrip4iOS to show a notification on your phone every 5 minutes. This will appear as per the Notification settings for xDrip4iOS in your iPhone settings. You can enabled banner notifications and chose if it will show on the lock-screen or not. You can also enable the App Badge which will should your current BG value on the app icon. When using mmol/l the App Badge will display decimals only if Show BG in Notifications is enabled. If you disable Notifications you can use multiply by 10 to show the full value (you'll need to mentally add the decimal point. 61 means 6.1 mmol/l). If not, here are some options that you might like to adjust: Objective Values \u2301 We think of objective values as our working limits. We define theses limits as being: in range out of range out of range (urgent) . In Range \u2301 Firstly we need to set a range where we want our glucose to be most of the time. This is set using Low Value and High Value . Whilst our blood glucose value is between these limits, we will see the glucose points and values in green . Out of Range \u2301 When our glucose values are below our Low value or above our High value, but still not anything to be worried about, then we will see them in yellow . We might use this as a sign that we should think about taking some kind of action (eat something or take insulin) before the values become \"urgent\". Out of Range (Urgent) \u2301 When our glucose values are above or below our \"Urgent\" values, then we consider them to need urgent attention and we will see them in red . We set these limits using the Urgent Low Value and Urgent High Value We should take evaluate the situation and decide if we must take action (eat glucose or take insulin). Graph Options \u2301 xDrip4iOS allows us to show the main graph in two ways: Dynamic y-axis \u2301 This option (used by default) will use our objective values to define the values shown on the vertical axis. It will also show guidelines across the graph so that we can easily see how close we are to each limit. The graph will automatically scale if our blood glucose value is above our Urgent High value. Standard Grid \u2301 By deselecting the dynamic graph option, xDrip4iOS will just show a default grid system. Again, the graph will scale as needed.","title":"General"},{"location":"configure/#general-settings","text":"In a previous section , you should have initially configured xDrip4iOS to use mg/dl or mmol/l and to act as a Master or Follower device. Now we can start to configure the app to work as we want. When you first install xDrip4iOS, we will put some default values that should work fine for most users to start using the app with.","title":"General Settings"},{"location":"configure/#show-notifications","text":"You can enable xDrip4iOS to show a notification on your phone every 5 minutes. This will appear as per the Notification settings for xDrip4iOS in your iPhone settings. You can enabled banner notifications and chose if it will show on the lock-screen or not. You can also enable the App Badge which will should your current BG value on the app icon. When using mmol/l the App Badge will display decimals only if Show BG in Notifications is enabled. If you disable Notifications you can use multiply by 10 to show the full value (you'll need to mentally add the decimal point. 61 means 6.1 mmol/l). If not, here are some options that you might like to adjust:","title":"Show Notifications"},{"location":"configure/#objective-values","text":"We think of objective values as our working limits. We define theses limits as being: in range out of range out of range (urgent) .","title":"Objective Values"},{"location":"configure/#in-range","text":"Firstly we need to set a range where we want our glucose to be most of the time. This is set using Low Value and High Value . Whilst our blood glucose value is between these limits, we will see the glucose points and values in green .","title":"In Range"},{"location":"configure/#out-of-range","text":"When our glucose values are below our Low value or above our High value, but still not anything to be worried about, then we will see them in yellow . We might use this as a sign that we should think about taking some kind of action (eat something or take insulin) before the values become \"urgent\".","title":"Out of Range"},{"location":"configure/#out-of-range-urgent","text":"When our glucose values are above or below our \"Urgent\" values, then we consider them to need urgent attention and we will see them in red . We set these limits using the Urgent Low Value and Urgent High Value We should take evaluate the situation and decide if we must take action (eat glucose or take insulin).","title":"Out of Range (Urgent)"},{"location":"configure/#graph-options","text":"xDrip4iOS allows us to show the main graph in two ways:","title":"Graph Options"},{"location":"configure/#dynamic-y-axis","text":"This option (used by default) will use our objective values to define the values shown on the vertical axis. It will also show guidelines across the graph so that we can easily see how close we are to each limit. The graph will automatically scale if our blood glucose value is above our Urgent High value.","title":"Dynamic y-axis"},{"location":"configure/#standard-grid","text":"By deselecting the dynamic graph option, xDrip4iOS will just show a default grid system. Again, the graph will scale as needed.","title":"Standard Grid"},{"location":"configure/alarms/","text":"Setting Alarms \u2301 xDrip4iOS, the same as all other CGM apps, is able to alert you to certain events by sounding an alarm on your iPhone. Alarms can be configured to happen for different reasons, such as: your blood glucose is getting too low your blood glucose is dropping very quickly your blood glucose is getting high you need to put in your initial calibration you have stopped getting readings from your sensor We can also use alarms to function as reminders to remind us to: calibrate our sensor every x days stop and buy bread on the way home from work not really, but we're glad you're reading everything There are two steps to configure an alarm in xDrip4iOS. We define the Alarm Types . These are different types of alarms that we can use to alert us to different types of events. We define the Alarms themselves. These trigger different types of alarm based upon certain events that happen or conditions that we decide. Before we continue... Let's just quickly get the concept clear. Take a deep breath and repeat after me... An Alarm Type can be used for many different Alarms . Any Alarm can only use one Alarm Type at a time. Alarm Types \u2301 Here we will define the different types of alarm that we will hear. If you go into Alarm Types, you will see that we there is a default Alarm Type set. We called it \"Default\"... because we're original and clever. You can modify this, or you can create your own Alarm Type. If you want to add a new/custom Alarm Type, click the + button and configure it. We can set the following parameters for an Alarm Type: Option Description Enabled If enabled, any alarm assigned with this alarm type will alert us. If not enabled, the assigned alarm will not trigger Name Enter a name here such as \"Loud\", \"Urgent\" or \"Quiet\". The name can be anything you chose Vibrate If enabled, the alarm will vibrate the phone Sound Choose the sound that you want to play when the alarm is triggered Override Mute If enabled, the alarm will sound even if the phone is in \"Silent Mode\" Snooze Via Notification If enabled, any notification will contain the option to \"snooze\" the alarm during x minutes Default Snooze Time Once an alarm is snoozed, how many minutes should it wait before alarming again? Once you've finished editing your Alarm Type, make sure you hit Done in the top-right corner. If you don't, you'll lose your changes. Alarms \u2301 Now that we have an Alarm Type configured, we can configure the individual Alarms. An alarm will be triggered when the something meets a defined condition. For example you could define an alarm to be triggered: \"Sound an Low Alarm whenever my blood glucose drops below 60mg/dl \" \"Sound a High Alarm if my blood glucose goes over 250mg/dl \" \"Sound a Low Alarm When my blood glucose drops below 80mg/dl during the night\" \"Sound an alarm if xDrip4iOS has been Missing Readings from my sensor in the last 30 minutes \" \"Sound an alarm 72 hours after I last calibrated my sensor to remind me to calibrate again\" In the above examples, you will see two things. The Alarms that are available and the conditions that we can set for them to be triggered. Volume Tests \u2301 They alarm will sound with the volume that your iPhone is set to. This could mean that you have the volume turned right down and would then not hear anything. In order to be able to quickly test what volume your alarms will sound at (before going to bed for example), you can click the Volume Test buttons. A sample Alarm sound will play and you can adjust the volume as required using the volume keys on the side of your iPhone. Then just click OK to stop the alarm. If you have alarms that use the Override Mute function, then when silent mode is activated (the small switch above the volume keys), there will be a different volume level used. To test/set this level, click the Volume Test (Override Mute) button, set the level and click OK.","title":"Alarms"},{"location":"configure/alarms/#setting-alarms","text":"xDrip4iOS, the same as all other CGM apps, is able to alert you to certain events by sounding an alarm on your iPhone. Alarms can be configured to happen for different reasons, such as: your blood glucose is getting too low your blood glucose is dropping very quickly your blood glucose is getting high you need to put in your initial calibration you have stopped getting readings from your sensor We can also use alarms to function as reminders to remind us to: calibrate our sensor every x days stop and buy bread on the way home from work not really, but we're glad you're reading everything There are two steps to configure an alarm in xDrip4iOS. We define the Alarm Types . These are different types of alarms that we can use to alert us to different types of events. We define the Alarms themselves. These trigger different types of alarm based upon certain events that happen or conditions that we decide. Before we continue... Let's just quickly get the concept clear. Take a deep breath and repeat after me... An Alarm Type can be used for many different Alarms . Any Alarm can only use one Alarm Type at a time.","title":"Setting Alarms"},{"location":"configure/alarms/#alarm-types","text":"Here we will define the different types of alarm that we will hear. If you go into Alarm Types, you will see that we there is a default Alarm Type set. We called it \"Default\"... because we're original and clever. You can modify this, or you can create your own Alarm Type. If you want to add a new/custom Alarm Type, click the + button and configure it. We can set the following parameters for an Alarm Type: Option Description Enabled If enabled, any alarm assigned with this alarm type will alert us. If not enabled, the assigned alarm will not trigger Name Enter a name here such as \"Loud\", \"Urgent\" or \"Quiet\". The name can be anything you chose Vibrate If enabled, the alarm will vibrate the phone Sound Choose the sound that you want to play when the alarm is triggered Override Mute If enabled, the alarm will sound even if the phone is in \"Silent Mode\" Snooze Via Notification If enabled, any notification will contain the option to \"snooze\" the alarm during x minutes Default Snooze Time Once an alarm is snoozed, how many minutes should it wait before alarming again? Once you've finished editing your Alarm Type, make sure you hit Done in the top-right corner. If you don't, you'll lose your changes.","title":"Alarm Types"},{"location":"configure/alarms/#alarms","text":"Now that we have an Alarm Type configured, we can configure the individual Alarms. An alarm will be triggered when the something meets a defined condition. For example you could define an alarm to be triggered: \"Sound an Low Alarm whenever my blood glucose drops below 60mg/dl \" \"Sound a High Alarm if my blood glucose goes over 250mg/dl \" \"Sound a Low Alarm When my blood glucose drops below 80mg/dl during the night\" \"Sound an alarm if xDrip4iOS has been Missing Readings from my sensor in the last 30 minutes \" \"Sound an alarm 72 hours after I last calibrated my sensor to remind me to calibrate again\" In the above examples, you will see two things. The Alarms that are available and the conditions that we can set for them to be triggered.","title":"Alarms"},{"location":"configure/alarms/#volume-tests","text":"They alarm will sound with the volume that your iPhone is set to. This could mean that you have the volume turned right down and would then not hear anything. In order to be able to quickly test what volume your alarms will sound at (before going to bed for example), you can click the Volume Test buttons. A sample Alarm sound will play and you can adjust the volume as required using the volume keys on the side of your iPhone. Then just click OK to stop the alarm. If you have alarms that use the Override Mute function, then when silent mode is activated (the small switch above the volume keys), there will be a different volume level used. To test/set this level, click the Volume Test (Override Mute) button, set the level and click OK.","title":"Volume Tests"},{"location":"configure/algorithm/","text":"Calibration of xDrip4iOS \u2301 What is an Algorithm? \u2301 Placeholder xDrip Algorithm \u2301 Placeholder Libre Algorithm \u2301 Placeholder","title":"Algorithm"},{"location":"configure/algorithm/#calibration-of-xdrip4ios","text":"","title":"Calibration of xDrip4iOS"},{"location":"configure/algorithm/#what-is-an-algorithm","text":"Placeholder","title":"What is an Algorithm?"},{"location":"configure/algorithm/#xdrip-algorithm","text":"Placeholder","title":"xDrip Algorithm"},{"location":"configure/algorithm/#libre-algorithm","text":"Placeholder","title":"Libre Algorithm"},{"location":"configure/applewatch/","text":"Connecting to an Apple Watch \u2301","title":"Apple Watch"},{"location":"configure/applewatch/#connecting-to-an-apple-watch","text":"","title":"Connecting to an Apple Watch"},{"location":"configure/calibrate/","text":"Calibration of xDrip4iOS \u2301 Why Calibrate? \u2301 Placeholder Calibration Best Practices \u2301 Placeholder","title":"Calibration"},{"location":"configure/calibrate/#calibration-of-xdrip4ios","text":"","title":"Calibration of xDrip4iOS"},{"location":"configure/calibrate/#why-calibrate","text":"Placeholder","title":"Why Calibrate?"},{"location":"configure/calibrate/#calibration-best-practices","text":"Placeholder","title":"Calibration Best Practices"},{"location":"configure/freeaps/","text":"FreeAPS (Loop) Integration \u2301 xDrip4iOS can be used as an offline CGM data source for the FreeAPS fork of Loop What is FreeAPS (Loop)? \u2301 Loop is an Artificial Pancreas System (APS) written for the iPhone. An APS works by reading blood glucose values, predicting/calculating the insulin requirement and automatically adjusting a user's insulin pump with the aim of keeping the user within their target blood glucose range. FreeAPS is a fork of the Loop project developed and maintained by Ivan Valkou . FreeAPS vs FreeAPS X?? This could get confusing, so pay attention: Ivan's original FreeAPS project is based on Loop and is what we are discussing on this page Ivan's newer FreeAPS X project is based on OpenAPS . It is a different system and is discussed here The main difference between Loop and FreeAPS is that FreeAPS is able to administer insulin delivery via micro-boluses instead of adjusting basal rates. Although Loop also now has an autobolus branch which is similar, FreeAPS is much more customizable and flexible. It is important to note that the app developer has decided to halt all active development on FreeAPS in order to concentrate all efforts on his new FreeAPS X project. Collaborators are encouraged to participate with the maintenance of the fork. Whereas Loop will only work with compatible Dexcom or Medtronic pump-connected sensors, FreeAPS also contains a Nightscout client which can be used to pull glucose data from the user's Nightscout site, or via apps (such as Spike) that have an internal http server that mimics a Nightscout server. Pulling data from the cloud, or using http servers on iOS, are potentially unstable options for an APS (although they will generally work well most times). Aleksandar Obucina has created a fork of Ivan's FreeASP (Loop). This includes an xdrip client written in Swift by Julien Groen . This modified version of FreeAPS has xDrip4iOS as a CGM option and will pull glucose data directly offline from xDrip4iOS without needing to use any intermediate services. It is necessary to clone, build and install Aleksandar's fork of FreeAPS and then do the same with the master branch of xDrip4iOS. Important: The Testflight version of xDrip4iOS cannot be used with FreeAPS. How do I install FreeAPS (Loop)? \u2301 Aleks' Github repository is here . In LoopDocs there is a nice page about cloning and building workspace files here . Please read the above page and ensure your Mac is fully updated (both MacOS and Xcode) and Xcode Command Line tools/Git are installed before proceeding. Clone the LoopWorkspace \u2301 First we need to create a folder where we will clone the source code and build the project. We recommened creating a folder in your Documents called \" FreeAPS \". Open Terminal on your Mac and type in the following to change to your Documents folder: (You can copy and paste the below text, one line at a time, pressing return after pasting each line) cd documents Create the new folder: mkdir freeaps Change into the newly created folder: cd freeaps We will now issue a Git command to clone (download) the current version of Aleks' repository into your new folder: git clone --branch=freeaps --recurse-submodules https://github.com/alekst1d/LoopWorkspace This will create a new folder called LoopWorkspace containing the source code. You should now navigate into this new folder: cd LoopWorkspace We will now open the workspace file in Xcode by typing the following: xed . Sign the Targets \u2301 As per a normal Loop build, you will need to sign the four targets using your Development Team. Signing will automatically set the Bundle Identifier for your app. You can change this, but be aware that it will then install a completely new FreeAPS app. It's better to just leave it as is. App Group \u2301 Please do not modify the App Groups at all. This is important to ensure integration with xDrip4iOS. How do I install xDrip4iOS? \u2301 You need to follow the Build From Source instructions. The common LoopKit app group is already written into the standard project file in xDrip4iOS so no need to touch anything. Operation \u2301 The operation of both FreeAPS (Loop) and xDrip4iOS is the same. The only thing needed is to add a CGM in FreeAPS and chose \"xDrip4iOS\". This will tell FreeAPS to look for glucose data in the shared app group via Julien's xdrip client.","title":"FreeAPS (Loop) Integration"},{"location":"configure/freeaps/#freeaps-loop-integration","text":"xDrip4iOS can be used as an offline CGM data source for the FreeAPS fork of Loop","title":"FreeAPS (Loop) Integration"},{"location":"configure/freeaps/#what-is-freeaps-loop","text":"Loop is an Artificial Pancreas System (APS) written for the iPhone. An APS works by reading blood glucose values, predicting/calculating the insulin requirement and automatically adjusting a user's insulin pump with the aim of keeping the user within their target blood glucose range. FreeAPS is a fork of the Loop project developed and maintained by Ivan Valkou . FreeAPS vs FreeAPS X?? This could get confusing, so pay attention: Ivan's original FreeAPS project is based on Loop and is what we are discussing on this page Ivan's newer FreeAPS X project is based on OpenAPS . It is a different system and is discussed here The main difference between Loop and FreeAPS is that FreeAPS is able to administer insulin delivery via micro-boluses instead of adjusting basal rates. Although Loop also now has an autobolus branch which is similar, FreeAPS is much more customizable and flexible. It is important to note that the app developer has decided to halt all active development on FreeAPS in order to concentrate all efforts on his new FreeAPS X project. Collaborators are encouraged to participate with the maintenance of the fork. Whereas Loop will only work with compatible Dexcom or Medtronic pump-connected sensors, FreeAPS also contains a Nightscout client which can be used to pull glucose data from the user's Nightscout site, or via apps (such as Spike) that have an internal http server that mimics a Nightscout server. Pulling data from the cloud, or using http servers on iOS, are potentially unstable options for an APS (although they will generally work well most times). Aleksandar Obucina has created a fork of Ivan's FreeASP (Loop). This includes an xdrip client written in Swift by Julien Groen . This modified version of FreeAPS has xDrip4iOS as a CGM option and will pull glucose data directly offline from xDrip4iOS without needing to use any intermediate services. It is necessary to clone, build and install Aleksandar's fork of FreeAPS and then do the same with the master branch of xDrip4iOS. Important: The Testflight version of xDrip4iOS cannot be used with FreeAPS.","title":"What is FreeAPS (Loop)?"},{"location":"configure/freeaps/#how-do-i-install-freeaps-loop","text":"Aleks' Github repository is here . In LoopDocs there is a nice page about cloning and building workspace files here . Please read the above page and ensure your Mac is fully updated (both MacOS and Xcode) and Xcode Command Line tools/Git are installed before proceeding.","title":"How do I install FreeAPS (Loop)?"},{"location":"configure/freeaps/#clone-the-loopworkspace","text":"First we need to create a folder where we will clone the source code and build the project. We recommened creating a folder in your Documents called \" FreeAPS \". Open Terminal on your Mac and type in the following to change to your Documents folder: (You can copy and paste the below text, one line at a time, pressing return after pasting each line) cd documents Create the new folder: mkdir freeaps Change into the newly created folder: cd freeaps We will now issue a Git command to clone (download) the current version of Aleks' repository into your new folder: git clone --branch=freeaps --recurse-submodules https://github.com/alekst1d/LoopWorkspace This will create a new folder called LoopWorkspace containing the source code. You should now navigate into this new folder: cd LoopWorkspace We will now open the workspace file in Xcode by typing the following: xed .","title":"Clone the LoopWorkspace"},{"location":"configure/freeaps/#sign-the-targets","text":"As per a normal Loop build, you will need to sign the four targets using your Development Team. Signing will automatically set the Bundle Identifier for your app. You can change this, but be aware that it will then install a completely new FreeAPS app. It's better to just leave it as is.","title":"Sign the Targets"},{"location":"configure/freeaps/#app-group","text":"Please do not modify the App Groups at all. This is important to ensure integration with xDrip4iOS.","title":"App Group"},{"location":"configure/freeaps/#how-do-i-install-xdrip4ios","text":"You need to follow the Build From Source instructions. The common LoopKit app group is already written into the standard project file in xDrip4iOS so no need to touch anything.","title":"How do I install xDrip4iOS?"},{"location":"configure/freeaps/#operation","text":"The operation of both FreeAPS (Loop) and xDrip4iOS is the same. The only thing needed is to add a CGM in FreeAPS and chose \"xDrip4iOS\". This will tell FreeAPS to look for glucose data in the shared app group via Julien's xdrip client.","title":"Operation"},{"location":"configure/freeapsx/","text":"FreeAPS X (OpenAPS) Integration \u2301 xDrip4iOS can be used as an offline CGM data source for the FreeAPS fork of Loop What is FreeAPS X? \u2301 How do I install FreeAPS X? \u2301 How do I install xDrip4iOS? \u2301 You need to follow the Build From Source instructions but with a few small differences as explained below:","title":"FreeAPS X (OpenAPS) Integration"},{"location":"configure/freeapsx/#freeaps-x-openaps-integration","text":"xDrip4iOS can be used as an offline CGM data source for the FreeAPS fork of Loop","title":"FreeAPS X (OpenAPS) Integration"},{"location":"configure/freeapsx/#what-is-freeaps-x","text":"","title":"What is FreeAPS X?"},{"location":"configure/freeapsx/#how-do-i-install-freeaps-x","text":"","title":"How do I install FreeAPS X?"},{"location":"configure/freeapsx/#how-do-i-install-xdrip4ios","text":"You need to follow the Build From Source instructions but with a few small differences as explained below:","title":"How do I install xDrip4iOS?"},{"location":"configure/smartwatches/","text":"Connecting to Smartwatches \u2301 xDrip4iOS can be used with several other types of popular smartwatches although the way of using them to see your data with change depending on the type of smartwatch used. Fitbit \u2301 Ionic, Versa 1/2/3 Glucose value, graphs and Nightscout careportal integration Internet connection and Nightscout needed Instructions pending Garmin \u2301 Forerunner or Fenix watches (Glucose Values, graphs) Garmin Edge cycle computers (Glucose Values) Internet connection and Nightscout needed Instructions pending Xiaomi MiBand \u2301 MiBand 4, 5 or 6 Glucose values only Uses iPhone notifications (offline) Instructions pending Amazfit \u2301 GTS Glucose values only Uses iPhone notifications (offline) Instructions pending","title":"Other Smartwatches"},{"location":"configure/smartwatches/#connecting-to-smartwatches","text":"xDrip4iOS can be used with several other types of popular smartwatches although the way of using them to see your data with change depending on the type of smartwatch used.","title":"Connecting to Smartwatches"},{"location":"configure/smartwatches/#fitbit","text":"Ionic, Versa 1/2/3 Glucose value, graphs and Nightscout careportal integration Internet connection and Nightscout needed Instructions pending","title":"Fitbit"},{"location":"configure/smartwatches/#garmin","text":"Forerunner or Fenix watches (Glucose Values, graphs) Garmin Edge cycle computers (Glucose Values) Internet connection and Nightscout needed Instructions pending","title":"Garmin"},{"location":"configure/smartwatches/#xiaomi-miband","text":"MiBand 4, 5 or 6 Glucose values only Uses iPhone notifications (offline) Instructions pending","title":"Xiaomi MiBand"},{"location":"configure/smartwatches/#amazfit","text":"GTS Glucose values only Uses iPhone notifications (offline) Instructions pending","title":"Amazfit"},{"location":"connect/","text":"Connect a Data Source \u2301 Master or Follower? \u2301 In order to be able to see Blood Glucose data in xDrip4iOS, you need to connect it to a data source . There are two types of data sources that you can use: In Master mode, your iPhone will connect directly to a bluetooth-enabled CGM system (sensor/transmitter) in order to receive real-time data. In Follower mode, your iPhone will connect to a Nightscout site over the internet and pull real-time data. Put simply, a Master is usually used by the actual person who is wearing the sensor and a Follower is usually a parent/friend/caregiver that wants to be able to track (follow) the other person's CGM values. Once we've decided whether we want to use xDrip4iOS as a Master or a Follower device, we need to click on the Settings tab and chose the mode we want. Click on the option if you need to change it between the two modes. Blood Glucose Unit \u2301 The next step is to make sure that the Blood Glucose unit is correctly set. If you are used to seeing your BG values as small numbers with a single decimal place such as 4.7, 6.3 or 10.4 then you are using mmol/l . (Common in Canada, Northen Europe, Australia, South Africa, China etc) If you usually see your BG values as bigger numbers such as 76, 127 or 215 then you are using mg/dl . (Common in USA, Southern Europe, India, Japan, Central/South America etc) Once you've set your device mode and BG unit, you're ready to connect a data source. Click here to connect to your CGM as a Master Click here to connect to Nightscout as a Follower","title":"Initial Configuration"},{"location":"connect/#connect-a-data-source","text":"","title":"Connect a Data Source"},{"location":"connect/#master-or-follower","text":"In order to be able to see Blood Glucose data in xDrip4iOS, you need to connect it to a data source . There are two types of data sources that you can use: In Master mode, your iPhone will connect directly to a bluetooth-enabled CGM system (sensor/transmitter) in order to receive real-time data. In Follower mode, your iPhone will connect to a Nightscout site over the internet and pull real-time data. Put simply, a Master is usually used by the actual person who is wearing the sensor and a Follower is usually a parent/friend/caregiver that wants to be able to track (follow) the other person's CGM values. Once we've decided whether we want to use xDrip4iOS as a Master or a Follower device, we need to click on the Settings tab and chose the mode we want. Click on the option if you need to change it between the two modes.","title":"Master or Follower?"},{"location":"connect/#blood-glucose-unit","text":"The next step is to make sure that the Blood Glucose unit is correctly set. If you are used to seeing your BG values as small numbers with a single decimal place such as 4.7, 6.3 or 10.4 then you are using mmol/l . (Common in Canada, Northen Europe, Australia, South Africa, China etc) If you usually see your BG values as bigger numbers such as 76, 127 or 215 then you are using mg/dl . (Common in USA, Southern Europe, India, Japan, Central/South America etc) Once you've set your device mode and BG unit, you're ready to connect a data source. Click here to connect to your CGM as a Master Click here to connect to Nightscout as a Follower","title":"Blood Glucose Unit"},{"location":"connect/cgm/","text":"Connect to a CGM as a Master Device \u2301 In this page, we will go through the method of connecting a CGM system to xDrip4iOS so that this receives real-time CGM data from your sensor. Firstly, make sure you have correctly set xDrip4iOS as a Master device and you have chosen the units that your BG should be displayed in. Do not try and connect to your CGM transmitter from the Bluetooth menu on your iPhone. You must only connect from within the xDrip4iOS app. Before continuing, please check the compatibility tables to make sure that your CGM system is compatible. Libre \u2301 Libre 2 Direct Connection \u2301 Compatibility This is only valid for the European Libre 2 sensor (aka Libre2 EU). More information here . Firstly make sure that your Libre 2 sensor is started and working. If you scan the sensor with the LibreLink app, can you see the values/graph ? If not , start the sensor from the LibreLink app or put a new sensor on and start it. Then go back to the previous step until it works. If yes , then let's continue. Disable LibreLink Bluetooth Permission To avoid problems with the LibreLink app \"stealing\" the bluetooth connection from xDrip4iOS, we need to ensure that the LibreLink app has it's bluetooth permissions disabled. Go to your iPhone Settings and scroll down to LibreLink. Select the app and in the options, disable Bluetooth. Connect to the Libre 2 Go to the Bluetooth tab and choose CGM as your Device Type , press OK . If you already have a previous CGM added, you will get a warning to say that you can only have one CGM device added at a time. Please delete the previous device and try again. In the Transmitter Types, select Libre 2 and click OK. You will get a message to Scan your sensor with the NFC antenna of your iPhone. You should scan the sensor as you would to start/read the sensor using the Libre app. If you get an error message, please repeat adding the Libre 2 and scan again. Once your sensor has been scanned successfully, you will see a message asking you to keep xDrip4iOS open whilst the Bluetooth connection is made. Just leave your iPhone on the table and have a coffee. DO NOT play Roblox, watch Netflix or listen to Spotify. Put the phone down without touching it and keep it close to you. When xDrip4iOS finds your sensor, you will get a message saying the the sensor has been connected correctly. Click OK . You can now choose if you want to use the Libre algorithm or deselect this option to use the xDrip algorithm with manual calibrations ( recommended ). Wait for up to 10-15 minutes for xDrip4iOS to receive the first two readings from your sensor. If you are using the Libre algorithm , you will then automatically start getting values. If you are using the xDrip algorithm , xDrip4iOS will ask you for an initial calibration. Make sure you use a good blood glucose meter and follow the calibration rules where possible. Libre 1/2 with a Transmitter \u2301 Compatibility This method is only valid for the European Libre 1 or Libre 2 sensors with a compatible transmitter such as MiaoMiao, Bubble, Droplet... Firstly make sure that your Libre sensor is started and working. If you scan the sensor with the LibreLink app, can you see the values/graph ? If not , start the sensor from the LibreLink app or put a new sensor on and start it. Then go back to the previous step until it works. If yes , then let's continue. Add your Transmitter To to the Bluetooth tab and click the + button to add a new Device Type. Select CGM and then chose your transmitter type from the list. You will get a message asking you to keep xDrip4iOS open whilst the bluetooth connection is made with your transmitter. Just leave your iPhone on the table and have a coffee. DO NOT play Roblox, watch Netflix or listen to Spotify. Put the phone down without touching it and keep it close to you. Do it now. When xDrip4iOS finds your transmitter, you will get a message saying that it has been connected correctly. Click OK . You can now choose if you want to use the Libre algorithm or deselect this option to use the xDrip algorithm with manual calibrations ( recommended ). Wait for up to 10-15 minutes for xDrip4iOS to receive the first two readings from your sensor. If you are using the Libre algorithm , you will then automatically start getting values. If you are using the xDrip algorithm , xDrip4iOS will ask you for an initial calibration. Make sure you use a good blood glucose meter and follow the calibration rules where possible. Dexcom \u2301 Compatibility This method is valid for all Dexcom G4/G5 systems and also G6 up until \"Firefly\" transmitters. See here for more information. Dexcom G4 To connect to a Dexcom G4 transmitter, a xDrip Wireless Bridge (Wixel) is needed. More information is available here To to the Bluetooth tab and click the + button to add a new Device Type. Select CGM and then chose your Dexcom system (G4/G5/G6) from the list. You will be prompted to input your Transmitter ID (for example: 80H9W4 ). Once you have entered your Transmitter ID, you will see a message asking you to keep xDrip4iOS open whilst the transmitter is found and a bluetooth connection is made. Just leave your iPhone on the table and have a coffee. DO NOT play Roblox, watch Netflix or listen to Spotify. Put the phone down without touching it and stay close to it. When xDrip4iOS finds your transmitter, you will get a message saying that it has been connected correctly. Click OK . Dexcom Share Upload \u2301 You can configure xDrip4iOS to upload your sensor data to your Dexcom Share account. Dexcom Share You must have an invitation sent (even to yourself) by the Dexcom app to enable sharing. You can then use xDrip4iOS to share your data with any follower app (official and third party). This will not upload your data inside Clarity as only the Dexcom app can do this. In the Settings Menu, enable Upload to Dexcom Share , enter you account/user name and password. If you are inside the US, then also select the Use Dexcom US Servers option. If you are anywhere else (Canada, Europe etc, do not select this option) Nightscout Upload \u2301 Nightscout (also known as \"CGM In The Cloud\" ) is an open-source, cloud-based platform for storing, sharing and analysing CGM and treament data. Nightscout is one of the key pillars at the heart of the #wearenotwaiting community. We fully recommend all users to take advantage of this platform as it will open up many possibilities (sharing CGM data/alarms with family members, sharing CGM values to other devices, watches, tablets). Please see the main Nightscout documentation site for further information and set-up instructions. Further help and support can be found in the CGM In The Cloud Facebook group here In order to connect xDrip4iOS to Nightscout and upload your CGM data, in the Settings Menu, select Enable Nightscout . You should enter your Nightscout URL as per the service you are using. Examples (change mynightscout and 12345 as necessary) Heroku/Mongo : https://mynightscout.herokuapp.com ns.10be.de (1) : https://mynightscout.10be.de Port: 12345 T1Pal : https://mynightscout.t1pal.com (1) If your URL needs a port number to access the service (such as the default mode of ns.10be.de), then enter this number in Port . Finally, enter your API_SECRET which should be a 12 character \"password\" that you configured when setting up your Nightscout installation. Without this, xDrip4iOS will not be able to write data to Nightscout. If you want to check that your Nightscout credentials are correct, you can press the \"Test Connection\" button and you will get a message with the result of the test.","title":"Connect to CGM as a Master"},{"location":"connect/cgm/#connect-to-a-cgm-as-a-master-device","text":"In this page, we will go through the method of connecting a CGM system to xDrip4iOS so that this receives real-time CGM data from your sensor. Firstly, make sure you have correctly set xDrip4iOS as a Master device and you have chosen the units that your BG should be displayed in. Do not try and connect to your CGM transmitter from the Bluetooth menu on your iPhone. You must only connect from within the xDrip4iOS app. Before continuing, please check the compatibility tables to make sure that your CGM system is compatible.","title":"Connect to a CGM as a Master Device"},{"location":"connect/cgm/#libre","text":"","title":"Libre"},{"location":"connect/cgm/#libre-2-direct-connection","text":"Compatibility This is only valid for the European Libre 2 sensor (aka Libre2 EU). More information here . Firstly make sure that your Libre 2 sensor is started and working. If you scan the sensor with the LibreLink app, can you see the values/graph ? If not , start the sensor from the LibreLink app or put a new sensor on and start it. Then go back to the previous step until it works. If yes , then let's continue. Disable LibreLink Bluetooth Permission To avoid problems with the LibreLink app \"stealing\" the bluetooth connection from xDrip4iOS, we need to ensure that the LibreLink app has it's bluetooth permissions disabled. Go to your iPhone Settings and scroll down to LibreLink. Select the app and in the options, disable Bluetooth. Connect to the Libre 2 Go to the Bluetooth tab and choose CGM as your Device Type , press OK . If you already have a previous CGM added, you will get a warning to say that you can only have one CGM device added at a time. Please delete the previous device and try again. In the Transmitter Types, select Libre 2 and click OK. You will get a message to Scan your sensor with the NFC antenna of your iPhone. You should scan the sensor as you would to start/read the sensor using the Libre app. If you get an error message, please repeat adding the Libre 2 and scan again. Once your sensor has been scanned successfully, you will see a message asking you to keep xDrip4iOS open whilst the Bluetooth connection is made. Just leave your iPhone on the table and have a coffee. DO NOT play Roblox, watch Netflix or listen to Spotify. Put the phone down without touching it and keep it close to you. When xDrip4iOS finds your sensor, you will get a message saying the the sensor has been connected correctly. Click OK . You can now choose if you want to use the Libre algorithm or deselect this option to use the xDrip algorithm with manual calibrations ( recommended ). Wait for up to 10-15 minutes for xDrip4iOS to receive the first two readings from your sensor. If you are using the Libre algorithm , you will then automatically start getting values. If you are using the xDrip algorithm , xDrip4iOS will ask you for an initial calibration. Make sure you use a good blood glucose meter and follow the calibration rules where possible.","title":"Libre 2 Direct Connection"},{"location":"connect/cgm/#libre-12-with-a-transmitter","text":"Compatibility This method is only valid for the European Libre 1 or Libre 2 sensors with a compatible transmitter such as MiaoMiao, Bubble, Droplet... Firstly make sure that your Libre sensor is started and working. If you scan the sensor with the LibreLink app, can you see the values/graph ? If not , start the sensor from the LibreLink app or put a new sensor on and start it. Then go back to the previous step until it works. If yes , then let's continue. Add your Transmitter To to the Bluetooth tab and click the + button to add a new Device Type. Select CGM and then chose your transmitter type from the list. You will get a message asking you to keep xDrip4iOS open whilst the bluetooth connection is made with your transmitter. Just leave your iPhone on the table and have a coffee. DO NOT play Roblox, watch Netflix or listen to Spotify. Put the phone down without touching it and keep it close to you. Do it now. When xDrip4iOS finds your transmitter, you will get a message saying that it has been connected correctly. Click OK . You can now choose if you want to use the Libre algorithm or deselect this option to use the xDrip algorithm with manual calibrations ( recommended ). Wait for up to 10-15 minutes for xDrip4iOS to receive the first two readings from your sensor. If you are using the Libre algorithm , you will then automatically start getting values. If you are using the xDrip algorithm , xDrip4iOS will ask you for an initial calibration. Make sure you use a good blood glucose meter and follow the calibration rules where possible.","title":"Libre 1/2 with a Transmitter"},{"location":"connect/cgm/#dexcom","text":"Compatibility This method is valid for all Dexcom G4/G5 systems and also G6 up until \"Firefly\" transmitters. See here for more information. Dexcom G4 To connect to a Dexcom G4 transmitter, a xDrip Wireless Bridge (Wixel) is needed. More information is available here To to the Bluetooth tab and click the + button to add a new Device Type. Select CGM and then chose your Dexcom system (G4/G5/G6) from the list. You will be prompted to input your Transmitter ID (for example: 80H9W4 ). Once you have entered your Transmitter ID, you will see a message asking you to keep xDrip4iOS open whilst the transmitter is found and a bluetooth connection is made. Just leave your iPhone on the table and have a coffee. DO NOT play Roblox, watch Netflix or listen to Spotify. Put the phone down without touching it and stay close to it. When xDrip4iOS finds your transmitter, you will get a message saying that it has been connected correctly. Click OK .","title":"Dexcom"},{"location":"connect/cgm/#dexcom-share-upload","text":"You can configure xDrip4iOS to upload your sensor data to your Dexcom Share account. Dexcom Share You must have an invitation sent (even to yourself) by the Dexcom app to enable sharing. You can then use xDrip4iOS to share your data with any follower app (official and third party). This will not upload your data inside Clarity as only the Dexcom app can do this. In the Settings Menu, enable Upload to Dexcom Share , enter you account/user name and password. If you are inside the US, then also select the Use Dexcom US Servers option. If you are anywhere else (Canada, Europe etc, do not select this option)","title":"Dexcom Share Upload"},{"location":"connect/cgm/#nightscout-upload","text":"Nightscout (also known as \"CGM In The Cloud\" ) is an open-source, cloud-based platform for storing, sharing and analysing CGM and treament data. Nightscout is one of the key pillars at the heart of the #wearenotwaiting community. We fully recommend all users to take advantage of this platform as it will open up many possibilities (sharing CGM data/alarms with family members, sharing CGM values to other devices, watches, tablets). Please see the main Nightscout documentation site for further information and set-up instructions. Further help and support can be found in the CGM In The Cloud Facebook group here In order to connect xDrip4iOS to Nightscout and upload your CGM data, in the Settings Menu, select Enable Nightscout . You should enter your Nightscout URL as per the service you are using. Examples (change mynightscout and 12345 as necessary) Heroku/Mongo : https://mynightscout.herokuapp.com ns.10be.de (1) : https://mynightscout.10be.de Port: 12345 T1Pal : https://mynightscout.t1pal.com (1) If your URL needs a port number to access the service (such as the default mode of ns.10be.de), then enter this number in Port . Finally, enter your API_SECRET which should be a 12 character \"password\" that you configured when setting up your Nightscout installation. Without this, xDrip4iOS will not be able to write data to Nightscout. If you want to check that your Nightscout credentials are correct, you can press the \"Test Connection\" button and you will get a message with the result of the test.","title":"Nightscout Upload"},{"location":"connect/devices/","text":"Page under construction... \u2301","title":"Connect to M5Stack/M5StickC"},{"location":"connect/devices/#page-under-construction","text":"","title":"Page under construction..."},{"location":"connect/follower/","text":"Connect to Nightscout as a Follower \u2301 In this page, we will go through the method of connecting xDrip4iOS to an existing Nightscout instance. This will allow you to \"follow\" another person (child, loved one or patient) and see their CGM value and graph in real-time. Firstly, make sure you have valid CGM data being sent into the Nightscout site by a working master device/system. Follower Restrictions Please note that when used in Follower Mode, xDrip4iOS cannot connect to any CGM system/sensor. For this reason you will see that the Calibration and Sensor buttons are disabled. In Settings , check that you are set to Follower mode. If not, click the option once to change modes. In order to connect xDrip4iOS to Nightscout as a Follower, in the Settings Menu, select Enable Nightscout . You should enter your Nightscout URL as per the service you want to follow (if you don't know this, the master user will usually be able to give you this information). URL examples (change mynightscout and 12345 as necessary): Heroku/Mongo : https://mynightscout.herokuapp.com ns.10be.de (1) : https://mynightscout.10be.de Port: 12345 T1Pal : https://mynightscout.t1pal.com (1) If your URL needs a port number to access the service (such as the default mode of ns.10be.de), then enter this number in Port . Finally, enter your API_SECRET which should be a 12 character \"password\" that you configured when setting up your Nightscout installation. Without this, xDrip4iOS will not be able to write data to Nightscout. If you want to check that your Nightscout credentials are correct, you can press the \"Test Connection\" button and you will get a message with the result of the test.","title":"Connect to Nightscout as a Follower"},{"location":"connect/follower/#connect-to-nightscout-as-a-follower","text":"In this page, we will go through the method of connecting xDrip4iOS to an existing Nightscout instance. This will allow you to \"follow\" another person (child, loved one or patient) and see their CGM value and graph in real-time. Firstly, make sure you have valid CGM data being sent into the Nightscout site by a working master device/system. Follower Restrictions Please note that when used in Follower Mode, xDrip4iOS cannot connect to any CGM system/sensor. For this reason you will see that the Calibration and Sensor buttons are disabled. In Settings , check that you are set to Follower mode. If not, click the option once to change modes. In order to connect xDrip4iOS to Nightscout as a Follower, in the Settings Menu, select Enable Nightscout . You should enter your Nightscout URL as per the service you want to follow (if you don't know this, the master user will usually be able to give you this information). URL examples (change mynightscout and 12345 as necessary): Heroku/Mongo : https://mynightscout.herokuapp.com ns.10be.de (1) : https://mynightscout.10be.de Port: 12345 T1Pal : https://mynightscout.t1pal.com (1) If your URL needs a port number to access the service (such as the default mode of ns.10be.de), then enter this number in Port . Finally, enter your API_SECRET which should be a 12 character \"password\" that you configured when setting up your Nightscout installation. Without this, xDrip4iOS will not be able to write data to Nightscout. If you want to check that your Nightscout credentials are correct, you can press the \"Test Connection\" button and you will get a message with the result of the test.","title":"Connect to Nightscout as a Follower"},{"location":"install/build/","text":"How to Build xDrip4iOS using Xcode \u2301 Project repository here Install the Cocoa Pods Framework to your Mac \u2301 If this is the first time that you have built xDrip4iOS on your Mac, then you will need to install a set of frameworks called CocoaPods. If you have previously installed CocoaPods, you can skip this step. Enter the following command into Terminal: sudo gem install cocoapods This should install the dependencies and give you an OK message. Clone the xdripswift project \u2301 You should go into your Documents folder (or wherever you prefer) and run the following command to clone the xDrip4iOS project: git clone --branch=master --recurse-submodules https://github.com/JohanDegraeve/xdripswift This will create a new folder called xdripswift. Once completed we should navigate into this folder: cd xdripswift Install Cocoa Pods Dependencies \u2301 Earlier we installed the full Cocoa Pods framework onto your system. Now we will go into the cloned project folder and install the individual project dependencies there: pod install Again, you will see some activity and you should get an OK message. Open the WorkSpace file by typing: xed . Set the Bundle Identifier \u2301 Here you should create a unique Bundle Identifier for each target. The default value in the project is: net.johandegraeve.xdripswift net.johandegraeve.xdripswift.xDrip4iOS-Widget Obviously, this is already in use by Johan so we need to change them. You should change the part that says \" net.johndegraeve \" to something that nobody else is using. You can use anything you want such as: com.ilovetheweekend .xdripswift com.ilovetheweekend .xdripswift.xDrip4iOS-Widget net.keithrichards .xdripswift net.keithrichards .xdripswift.xDrip4iOS-Widget com.anything-i-want .xdripswift com.anything-i-want .xdripswift.xDrip4iOS-Widget Just invent something and try it. If somebody else is already using this identifier, then you'll get an error and can just chose another one. Now you should sign both targets with your Development Team, connect your iPhone to your Mac, select your device and hit Build (\"Play\")","title":"Build from Source"},{"location":"install/build/#how-to-build-xdrip4ios-using-xcode","text":"Project repository here","title":"How to Build xDrip4iOS using Xcode"},{"location":"install/build/#install-the-cocoa-pods-framework-to-your-mac","text":"If this is the first time that you have built xDrip4iOS on your Mac, then you will need to install a set of frameworks called CocoaPods. If you have previously installed CocoaPods, you can skip this step. Enter the following command into Terminal: sudo gem install cocoapods This should install the dependencies and give you an OK message.","title":"Install the Cocoa Pods Framework to your Mac"},{"location":"install/build/#clone-the-xdripswift-project","text":"You should go into your Documents folder (or wherever you prefer) and run the following command to clone the xDrip4iOS project: git clone --branch=master --recurse-submodules https://github.com/JohanDegraeve/xdripswift This will create a new folder called xdripswift. Once completed we should navigate into this folder: cd xdripswift","title":"Clone the xdripswift project"},{"location":"install/build/#install-cocoa-pods-dependencies","text":"Earlier we installed the full Cocoa Pods framework onto your system. Now we will go into the cloned project folder and install the individual project dependencies there: pod install Again, you will see some activity and you should get an OK message. Open the WorkSpace file by typing: xed .","title":"Install Cocoa Pods Dependencies"},{"location":"install/build/#set-the-bundle-identifier","text":"Here you should create a unique Bundle Identifier for each target. The default value in the project is: net.johandegraeve.xdripswift net.johandegraeve.xdripswift.xDrip4iOS-Widget Obviously, this is already in use by Johan so we need to change them. You should change the part that says \" net.johndegraeve \" to something that nobody else is using. You can use anything you want such as: com.ilovetheweekend .xdripswift com.ilovetheweekend .xdripswift.xDrip4iOS-Widget net.keithrichards .xdripswift net.keithrichards .xdripswift.xDrip4iOS-Widget com.anything-i-want .xdripswift com.anything-i-want .xdripswift.xDrip4iOS-Widget Just invent something and try it. If somebody else is already using this identifier, then you'll get an error and can just chose another one. Now you should sign both targets with your Development Team, connect your iPhone to your Mac, select your device and hit Build (\"Play\")","title":"Set the Bundle Identifier"},{"location":"install/testflight/","text":"Install from Testflight \u2301 Testflight is Apple's platform that allows developers to distribute test versions (often known as Beta versions) of their apps. It is generally much easier for developers to publish for testing compared to releasing them in the main App Store. There are less restrictions and it is also easier for developers to release several versions in quick succession in order to work out bugs and issues. There are two main ways to get xDrip4iOS on your iPhone: Install from Testflight Build and install from source code. The first option is easy for everybody. The second option is more complex and needs a Mac and some knowledge/experience, but it allows you to modify the code and install custom versions as required. Anybody who is using xDrip4iOS for looping should always build from source. 1. Install Testflight \u2301 Please go to the App Store on your iPhone and search for \"testflight\". You should find the following app available. Click Get to install the app (you may be asked to confirm your Apple ID password). Once installed, open the Testflight app, press Continue at the start screen, Accept the terms and conditions and then Allow notifications. You can then exit the TestFlight app (there is no redeem code to enter) 2. Join the Beta Test \u2301 Once you have Testflight correctly installed, you can now join the xDrip4iOS Beta test. Click on the below link using your iPhone : Link for xDrip4iOS Testflight Beta Invitation When you open the link, go to Step 2 and click on Start Testing to begin. 3. Install xDrip4iOS \u2301 Once installed, the button will change to Open . Click it to open xDrip4iOS. From now on, you can just open the app using the icon on your iPhone just like any other app. TestFlight will open and you will see the xDrip4iOS icon. Click the Install button. Again, accept the terms and conditions, allow the notifications. This is important! Now you're all done, you can start to connect xDrip4iOS to your CGM source. Age Restrictions \u2301 If you need to setup xDrip4iOS for an Apple ID registered to a child under 13, you must change the iPhone account to an adult's Apple ID (i.e. your own) in order to install Testflight and join the xDrip4iOS test. Once xDrip4iOS is installed, you can remove your Apple ID and add your child's account again. Install Previous Builds \u2301 If you are having problems with the latest version, then you can always try and revert back to a previous version. To do this, open Testflight, click on Previous Builds and Install the one that you know was working. If you have to do this, make sure you let us know about the problem !","title":"Install from Testflight"},{"location":"install/testflight/#install-from-testflight","text":"Testflight is Apple's platform that allows developers to distribute test versions (often known as Beta versions) of their apps. It is generally much easier for developers to publish for testing compared to releasing them in the main App Store. There are less restrictions and it is also easier for developers to release several versions in quick succession in order to work out bugs and issues. There are two main ways to get xDrip4iOS on your iPhone: Install from Testflight Build and install from source code. The first option is easy for everybody. The second option is more complex and needs a Mac and some knowledge/experience, but it allows you to modify the code and install custom versions as required. Anybody who is using xDrip4iOS for looping should always build from source.","title":"Install from Testflight"},{"location":"install/testflight/#1-install-testflight","text":"Please go to the App Store on your iPhone and search for \"testflight\". You should find the following app available. Click Get to install the app (you may be asked to confirm your Apple ID password). Once installed, open the Testflight app, press Continue at the start screen, Accept the terms and conditions and then Allow notifications. You can then exit the TestFlight app (there is no redeem code to enter)","title":"1. Install Testflight"},{"location":"install/testflight/#2-join-the-beta-test","text":"Once you have Testflight correctly installed, you can now join the xDrip4iOS Beta test. Click on the below link using your iPhone : Link for xDrip4iOS Testflight Beta Invitation When you open the link, go to Step 2 and click on Start Testing to begin.","title":"2. Join the Beta Test"},{"location":"install/testflight/#3-install-xdrip4ios","text":"Once installed, the button will change to Open . Click it to open xDrip4iOS. From now on, you can just open the app using the icon on your iPhone just like any other app. TestFlight will open and you will see the xDrip4iOS icon. Click the Install button. Again, accept the terms and conditions, allow the notifications. This is important! Now you're all done, you can start to connect xDrip4iOS to your CGM source.","title":"3. Install xDrip4iOS"},{"location":"install/testflight/#age-restrictions","text":"If you need to setup xDrip4iOS for an Apple ID registered to a child under 13, you must change the iPhone account to an adult's Apple ID (i.e. your own) in order to install Testflight and join the xDrip4iOS test. Once xDrip4iOS is installed, you can remove your Apple ID and add your child's account again.","title":"Age Restrictions"},{"location":"install/testflight/#install-previous-builds","text":"If you are having problems with the latest version, then you can always try and revert back to a previous version. To do this, open Testflight, click on Previous Builds and Install the one that you know was working. If you have to do this, make sure you let us know about the problem !","title":"Install Previous Builds"},{"location":"troubleshoot/","text":"xDrip4iOS blank page \u2301","title":"Troubleshooting"},{"location":"troubleshoot/#xdrip4ios-blank-page","text":"","title":"xDrip4iOS blank page"},{"location":"troubleshoot/connection_problems/","text":"xDrip4iOS blank page \u2301","title":"xDrip4iOS blank page"},{"location":"troubleshoot/connection_problems/#xdrip4ios-blank-page","text":"","title":"xDrip4iOS blank page"},{"location":"troubleshoot/disconnections/","text":"xDrip4iOS blank page \u2301","title":"Disconnections?"},{"location":"troubleshoot/disconnections/#xdrip4ios-blank-page","text":"","title":"xDrip4iOS blank page"},{"location":"troubleshoot/reporting_issues/","text":"xDrip4iOS blank page \u2301","title":"xDrip4iOS blank page"},{"location":"troubleshoot/reporting_issues/#xdrip4ios-blank-page","text":"","title":"xDrip4iOS blank page"}]}